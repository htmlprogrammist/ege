"""
Задание 19 (№1374).
Два игрока, Петя и Ваня, играют в следующую игру. Перед игроками лежат две кучи камней.
Игроки ходят по очереди, первый ход делает Петя. За один ход игрок может добавить в одну из куч
(по своему выбору) 10 камней или увеличить количество камней в куче в два раза.
Например, пусть в одной куче 10 камней, а в другой 5 камней, такую позицию в игре будем обозначать (10, 5).
Тогда за один ход можно получить любую из четырёх позиций: (20, 5), (10, 15), (10, 10).
Для того чтобы делать ходы, у каждого игрока есть неограниченное количество камней.
Игра завершается в тот момент, когда суммарное количество камней в кучах становится не менее 107.
Если при этом суммарное количество камней в двух кучах не превышает 170, победителем считается игрок,
сорершивший последний ход, иначе его противник. В начальный момент в первой куче было 5 камней,
во второй куче – S камней, 1 ≤ S ≤ 100.
Будем говорить, что игрок имеет выигрышную стратегию, если он может выиграть при любых ходах противника.

Известно, что Ваня выиграл своим первым ходом после неудачного хода Пети. При каком минимальном значении S такое возможно?

Задание 20 .

Для игры, описанной в задании 19, известно, что Петя имеет выигрышную стратегию.
Укажите два минимальных значения:
1.      при котором Петя сделал один или два хода, при этом Ваня сделал не менее одного хода (у Пети есть возможность выиграть после первого хода),
2.      при котором Петя имеет выигрышную стратегию только своим вторым ходом.
В качестве ответа укажите сначала значение для п.1, затем для п.2.

Задание 21 .
Для игры, описанной в задании 19, известно, что Ваня имеет выигрышную стратегию за один или два хода,
при этом не имеет выигрышной стратегии в один ход. Найдите минимальное значение S, при котором это возможно.

49      26
51 25   51 13
34      его нет => вряд-ли эти ответы будут валидны, разве что 26 в 19-м
"""
from functools import lru_cache


def moves(h):
    a, b = h
    return (a + 10, b), (a, b + 10), (a * 2, b), (a, b * 2)


@lru_cache(None)
def game(h):
    a, b = h
    if a + b >= 107:
        return 'W'

    if any(game(m) == 'W' for m in moves(h)):
        return 'P1'
    if any(game(m) == 'P1' for m in moves(h)):
        return 'V1'
    if any(game(m) == 'V1' for m in moves(h)):
        return 'P2'
    if all(game(m) == 'P1' or game(m) == 'P2' for m in moves(h)):
        return 'V2'


for s in range(1, 100 + 1):
    h = 5, s
    print(s, game(h))
