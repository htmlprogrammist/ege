"""
Задание 19 (№1202).
Два игрока, Петя и Ваня, играют в следующую игру. Перед игроками лежат две кучи камней.
Игроки ходят по очереди, первый ход делает Петя. За один ход игрок может добавить в одну из куч
(по своему выбору) один камень или увеличить количество камней в куче в два раза.
Например, пусть в одной куче 7 камней, а в другой 5 камней; такую позицию в игре будем обозначать (7, 5).
Тогда за один ход можно получить любую из четырёх позиций: (8, 5), (14, 5), (7, 6), (7, 10).
Для того чтобы делать ходы, у каждого игрока есть неограниченное количество камней.
Игра завершается в тот момент, когда суммарное количество камней в кучах становится не менее 59.
Победителем считается игрок, сделавший последний ход, т.е. первым получивший такую позицию,
что в кучах всего будет 59 камней или больше.
В начальный момент в первой куче было пять камней, во второй куче — S камней; 1 < S < 53.

Будем говорить, что игрок имеет выигрышную стратегию, если он может выиграть при любых ходах противника.
Описать стратегию игрока — значит описать, какой ход он должен сделать в любой ситуации,
которая ему может встретиться при различной игре противника.
В описание выигрышной стратегии не следует включать ходы играющего по этой стратегии игрока,
не являющиеся для него безусловно выигрышными, т.е. не являющиеся выигрышными независимо от игры противника.

Укажите минимальное значение S, при котором Петя может выиграть своим первым ходом.
"""
from functools import lru_cache


def moves(h):
    a, b = h
    return (a + 1, b), (a * 2, b), (a, b + 1), (a, b * 2)


@lru_cache(None)
def game(h):
    a, b = h
    if a + b >= 59:
        return 'W'
    if any(game(m) == 'W' for m in moves(h)):
        return 'P1'
    if all(game(m) == 'P1' for m in moves(h)):
        return 'V1'
    if any(game(m) == 'V1' for m in moves(h)):
        return 'P2'
    if all(game(m) == 'P1' or game(m) == 'P2' for m in moves(h)):
        return 'V2'


for s in range(2, 53):
    h = 5, s
    print(s, game(h))
