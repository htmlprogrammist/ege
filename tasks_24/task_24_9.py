"""
№ 1144
Текстовый файл содержит строку из заглавных букв A, B, C, D, E, F, всего не более чем из 10^6 символов.
AF-подстроками назовём последовательности символов A, B, C, D, E, F, ограниченные в начале символом A,
а в конце символом F (граничные символы входят в подстроку). Определите минимальную длину AF-подстроки.
Подстроки, состоящие из двух символов, не учитывать.
"""
f = open('24/24_1144.txt')
a = f.readline()
m = 999999

for i in range(len(a)):
    if a[i] == 'A':
        for j in range(i + 2, len(a)):
            if a[j] == 'F':
                diff = j - i + 1
                m = min(m, diff)
                break  # Закрвает строку и начинает искать новую
print(m)

# a = a.replace('F', '*')
# s = a.split("*")
# for i in range(len(s)):
#     try:
#         if s[i][0] == 'A':  # если начинается с А, то...
#             m = min(m, len(s[i]) + 1)  # считаю длину и сравниваю, что меньше.
#             # К длине прибавил 1, т.к. символ F надо включить
#     except IndexError:
#         pass
#
# print(m)
