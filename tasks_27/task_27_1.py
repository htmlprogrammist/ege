"""
№ 1067, Джобс 15.03.2021
На вход программы поступает последовательность из N пар целых положительных чисел.
Необходимо распределить все числа в парах на две группы таким образом,
чтобы разница количества четных чисел между группами была минимально возможная.
При этом одна из групп имела максимальную возможную сумму для такого распределения.
Входные данные.
Даны два входных файла (файл A и файл B), каждый из которых содержит в первой строке количество пар чисел N
(2 ≤ N ≤ 12000). В каждой из последующих N строк записано одно целое положительное число, не превышающее 500.
Программа должна вывести искомую сумму для приведенного набора данных.
Пример организации исходных данных во входном файле:
5
13 18
11 19
8 16
11 20
16 7
Для указанных входных данных значением искомой суммы должно быть число 13+19+16+20+16 = 84.
В ответе укажите два числа: сначала значение искомой суммы для файла А, затем для файла B.
Предупреждение: для обработки файла B не следует использовать переборный алгоритм,
вычисляющий сумму для всех возможных вариантов, поскольку написанная по такому алгоритму программа
будет выполняться слишком долго.

451 1700131
"""
# https://youtu.be/zKdC1Ir8gLw?t=10800
# алгоритм накопления частичных сумм -
# который накапливает частичные суммы для всех возможных вариантов четных чисел в сумме
f = open('txt/27-A_1067.txt')
n = int(f.readline())

# Нам нужно сохранить те пары, у которых элементы разные по четности, потому что если в паре два числа четные...
# ... то мы просто берём максимальное из них (1)
s = 0
pairs = []
for _ in range(n):
    # a, b = map(int, f.readline().split())
    pair = list(map(int, f.readline().split()))
    if sum(pair) % 2 == 0:  # (1)
        s += max(pair)
    else:
        pairs = pairs + pair
        # pairs = pairs + list([a, b]).sort()
print(pairs)
print(s)
