"""
(№ 3148) Дана последовательность, которая состоит из троек натуральных чисел.
Необходимо распределить все числа на три группы, при этом в каждую группу должно попасть ровно одно число из каждой
исходной тройки. Сумма всех чисел как в первой, так и во второй группе должна быть чётной.
Определите максимально возможную сумму всех чисел в третьей группе.
Входные данные. Даны два входных файла (файл A и файл B), каждый из которых содержит в первой строке количество чисел
N (1 ≤ N ≤ 100000). Каждая из следующих N строк содержит три натуральных числа, не превышающих 10000.
Пример входного файла:
3
1 2 3
8 12 4
6 9 7

Для указанных данных искомая сумма равна 24, она соответствует такому распределению чисел по группам:
(2, 4, 6), (1, 8, 7), (3, 12, 9).
В ответе укажите два числа: сначала искомое значение для файла А, затем для файла B.

3054 455301718
"""
from itertools import *

f = open('txt/27-3148-42b.txt')
n = int(f.readline())
s = [[0, 0, 0]]

for i in range(n):
    trk = [int(x) for x in f.readline().split()]
    cmb = [[x[0] + y[0], x[1] + y[1], x[2] + y[2]] for x in permutations(trk) for y in s]
    s = {(x[0] % 2, x[1] % 2): x for x in sorted(cmb, key=lambda x: x[2])}.values()

print(max([x for x in s if x[0] % 2 == 0 and x[1] % 2 == 0], key=lambda x: x[2])[2])
