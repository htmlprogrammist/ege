"""
(№ 4201) (В. Ярцев) Имеется набор данных, состоящий из троек положительных целых чисел.
Необходимо выбрать из каждой тройки ровно два числа так, чтобы сумма всех выбранных чисел делилась на 3 или на 17,
но не делилась на оба этих числа одновременно, и при этом была минимально возможной.
Гарантируется, что искомую сумму получить можно.
Входные данные. Даны два входных файла (файл A и файл B), каждый из которых содержит в первой строке количество
троек N (N ≤ 250000). Каждая из следующих N строк содержит три натуральных числа, не превышающих 10 000.

Пример входного файла:
7
35 9 10
14 31 50
46 5 17
19 39 6
33 9 1
30 27 11
46 36 16
Для указанных входных данных значением искомой суммы должно быть число 221.
В ответе укажите два числа: сначала искомое значение для файла А, затем для файла B.

218073 1874142240
"""
f = open('txt/27-4201-68b.txt')
n = int(f.readline())
s = [0]

for i in range(n):
    p = [int(x) for x in f.readline().split()]
    trk = [p[0] + p[1], p[1] + p[2], p[0] + p[2]]
    cmb = [a + b for a in s for b in trk]
    s = {x % 51: x for x in sorted(cmb, reverse=True)}.values()

m = min(x for x in s if (x % 3 == 0 and x % 17 != 0) or (x % 3 != 0 and x % 17 == 0))
print(m)
