""" 3772 с сайта Полякова с изменённым условием от Алексея Кабанова. https://youtu.be/zcKuJOYAxSs?t=4363
ЕГЭ по информатике 2021.35 Задание 27. Работа с последовательностью - 1:12:00
В файле записана последовательность натуральных чисел. Гарантируется, что все числа различны.
Из этой последовательности нужно найти количество троек различных чисел, сумма которых кратна 3.

Входные данные. Даны два входных файла (файл A и файл B),
каждый из которых содержит в первой строке количество чисел N (1 ≤ N ≤ 100000).
Каждая из следующих N строк содержит одно натуральное число, не превышающее 10^8.

Пример входного файла:
5
5
4
13
7
10
Для указанных данных можно выбрать тройки 4, 13 и 7 (сумма 24), 4, 13 и 10 (сумма 27),
4, 7 и 10 (сумма 21) или 13, 7 и 10 (сумма 30). Наименьшая из сумм – 21.
В ответе укажите два числа: сначала искомое значение для файла А, затем для файла B.

1351 55553889306316 (ответы просто по алгоритму написал)
"""
f = open('txt/27-53b-3772.txt')
n = int(f.readline())
d = [0] * 3  # количество предыдущих чисел
d2 = [0] * 3  # количество предыдущих пар
k = 0

for i in range(n):
    x = int(f.readline())
    # считаем количество троек
    for y in range(3):
        if (x + y) % 3 == 0:
            k += d2[y]

    # обновление данных
    for y in range(3):  # мы перебираем всевозможные группы чисел из массива d
        # эти группы складываются с x-ом, получаются новые пары в количестве dy
        d2[(x + y) % 3] += d[y]  # у этих пар есть остаток от деления, соответственно, эти пары соответствующий счётчик
        # увеличивают на количество пар
    d[x % 3] += 1
    # print(x, d, d2)  # https://youtu.be/zcKuJOYAxSs?t=4721
    # input()  # тут прикол, надо понять
print(k)
f.close()

from itertools import combinations

f = open('txt/27-53a-3772.txt')  # файл В будет дооолго))
n = int(f.readline())
a = [int(x) for x in f]
k = 0

for x, y, z in combinations(a, 3):
    if (x + y + z) % 3 == 0:
        k += 1
print(k)
