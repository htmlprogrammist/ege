"""
№ 1066, Джобс 15.03.2021
Системный администратор раз в неделю создаёт архив пользовательских файлов.
Файлы разделяются на две максимально равные по размеру и количеству группы. Архив создается в два этапа.
На первом этапе файлы с одинаковым размером распределяются на два жестких диска – первая половина файлов на первый диск,
вторая – на второй. На первом этапе всегда распределяется четное количество файлов.
Файлы, не попавшие в одну из двух групп распределяются на втором этапе.
На втором этапе архивации файлы сортируются и сохраняются попарно,
начиная с пары с максимальным суммарным объемом файлов, –
из каждой пары файл с максимальным размером сохраняется на диск с минимальным суммарным размером файлов,
меньший – на диск с максимальным суммарным размером файлов.
Запишите в ответе два числа: сначала количество файлов, которые архивируются на втором этапе,
затем разницу между суммарными объемами файлов на первом диске и на втором.

Пример организации исходных данных во входном файле (каждое число с новой строки):
10
10 20 30 10 20 70 80 30 30 100
При таких исходных данных на втором этапе будет сохранено 4 файла : 30, 70, 80 и 100.
На втором этапе файлы разделятся на две группы: 100+30, 70+80. Разница составит 20.

256 2
"""
# https://youtu.be/zKdC1Ir8gLw?t=10239
document = open('txt/task_26_9.txt')
n = int(document.readline())
numbers = set()

for _ in range(n):
    a = int(document.readline())
    if a not in numbers:
        numbers.add(a)
    else:
        numbers.remove(a)
    # Таким образом, в numbers остаются те файлы, которые являются непарными
    # потому что мы добавляем непарное число, но если число a уже есть в numbers (пара)
    # то мы его удаляем

n = list(numbers)
print(len(n))
n.sort(reverse=True)

s = [0, 0]  # сумма, сколько на каждом диске

for i in range(1, len(n) // 2):
    s[0] += n[i * 2]  # кладу больший файл
    s[1] += n[i * 2 + 1]  # кладу меньший файл
    s.sort()  # после сортировки это число будет меньшим файлом...
    # ... это делается для того, чтобы обойтись без if'ов, когда мы пытаемся узнать, какой файл больший/меньший

if len(n) % 2 != 0:  # если в n - нечетное количество чисел...
    s[0] += n[-1]  # ... то добавляем последний файл в наименьший элемент (s[0])

# выводим разницу
print(s[1] - s[0])
